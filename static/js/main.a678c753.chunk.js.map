{"version":3,"sources":["components/TableComponent.js","components/forms/PetForm.js","components/forms/ClientForm.js","pages/Dashboard.js","components/NavbarComponent.js","routes/Routes.js","serviceWorker.js","index.js"],"names":["data","id","nombre","raza","especie","sexo","color","Mycomponent","state","form","modalInsert","modalEdit","handleChange","e","setState","target","name","value","showAddModal","hideAddModal","showEditModal","registro","hideEditModal","insertar","idNueva","length","lista","push","guardar","dato","contador","map","eliminar","window","confirm","splice","Container","Button","onClick","Table","this","datitos","Modal","isOpen","ModalHeader","href","class","ModalBody","FormGroup","className","readOnly","type","pattern","onChange","ModalFooter","Component","datos","fecha","PetForm","useForm","register","handleSubmit","errors","getValues","console","log","onSubmit","alert","JSON","stringify","placeholder","ref","required","max","min","maxLength","ClientForm","cedula","apellido","email","telefono","Dashboard","props","NavbarComponent","useState","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","header","NavLink","divider","Routes","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a678c753.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\n\r\nconst data = [\r\n    {id: 1, nombre: \"Fifi\", raza: \"Poodle\", especie: \"Perro\", sexo: \"Hembra\", color:\"Blanco\"},\r\n    {id: 2, nombre: \"Pluto\", raza: \"Ragdoll\", especie: \"Gato\", sexo: \"Macho\", color:\"Negro\"},\r\n    {id: 3, nombre: \"Galore\", raza: \"Lori Arcoiris\", especie: \"Loro\", sexo: \"Macho\", color:\"Arcoiris\"}\r\n\r\n  ];\r\n\r\nexport class Mycomponent extends Component {\r\n    state = {\r\n        data: data,\r\n        form: {\r\n            id: '',\r\n            nombre: '',\r\n            raza: '',\r\n            especie: '',\r\n            sexo: '',\r\n            color: ''\r\n        },\r\n        modalInsert: false,\r\n        modalEdit: false,\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        });\r\n    }\r\n\r\n    showAddModal = () => {\r\n        this.setState({modalInsert: true});\r\n    }\r\n\r\n    hideAddModal = () => {\r\n        this.setState({modalInsert: false});\r\n    }\r\n\r\n    showEditModal = (registro) => {\r\n        this.setState({modalEdit: true, form: registro});\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({modalEdit: false});\r\n    }\r\n\r\n    insertar = () => {\r\n        var idNueva = {...this.state.form};\r\n        idNueva.id = this.state.data.length+1;\r\n        var lista = this.state.data;\r\n        lista.push(idNueva)\r\n        this.setState({data: lista, modalInsert: false})\r\n\r\n    }\r\n\r\n    guardar = (dato) => {\r\n        var contador=0;\r\n        var lista=this.state.data;\r\n        lista.map((registro) => {\r\n            if (dato.id == registro.id) {\r\n                lista[contador].nombre = dato.nombre;\r\n                lista[contador].raza = dato.raza;\r\n                lista[contador].especie = dato.especie;\r\n                lista[contador].sexo = dato.sexo;\r\n                lista[contador].color = dato.color;\r\n\r\n            }\r\n            contador++;\r\n        })\r\n        this.setState({data: lista, modalEdit: false});\r\n        \r\n    }\r\n\r\n    eliminar = (dato) => {\r\n        var opcion = window.confirm(\"Realmente deseas eliminar \" + dato.nombre + \"?\");\r\n        if (opcion) {\r\n            var contador=0;\r\n            var lista = this.state.data;\r\n            lista.map((registro) => {\r\n                if (dato.id ==registro.id ) {\r\n                    lista.splice(contador, 1)\r\n                }\r\n                contador++;\r\n            });\r\n            this.setState({data: lista})\r\n        } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Container>\r\n                <br/>\r\n                <Button color=\"success\" onClick={ () => this.showAddModal() }><ion-icon name=\"add\"></ion-icon> Nuevo</Button>   \r\n                <br/> <br/>\r\n\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Raza</th>\r\n                            <th>Color</th>\r\n                            <th>Especie</th>\r\n                            <th>Sexo</th>\r\n                            <th>Acciones</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        { this.state.data.map( (datitos) => (\r\n                        <tr>\r\n                            <td>{datitos.id}</td>\r\n                            <td>{datitos.nombre}</td>\r\n                            <td>{datitos.raza}</td>\r\n                            <td>{datitos.color}</td>\r\n                            <td>{datitos.especie}</td>\r\n                            <td>{datitos.sexo}</td>\r\n                            <td>\r\n                                <Button color=\"info\" onClick={ () => this.showEditModal(datitos) } >Editar <ion-icon name=\"pencil\"></ion-icon></Button>\r\n                                {\"  \"}\r\n                                <Button color=\"danger\" onClick={ () => this.eliminar(datitos) } >Borrar <ion-icon name=\"trash-bin\"></ion-icon> </Button>\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Container>  \r\n\r\n            <Modal isOpen={this.state.modalInsert}>\r\n\r\n                <ModalHeader>\r\n                    <div>\r\n                        <h1>Ingresar Mascota</h1>\r\n                        <p>No validado - Solo Crud</p>\r\n                        <Button color=\"warning\" href=\"/mascota\"> Form Validado - Sin Estilos {' '}<i class=\"fas fa-bullhorn\"></i></Button>\r\n                    </div>\r\n                </ModalHeader>\r\n\r\n                <ModalBody>\r\n\r\n                    <FormGroup>\r\n                        <label>ID: </label>\r\n                        <input className=\"form-control\" readOnly type=\"text\" value={this.state.data.length+1}/>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Nombre </label>\r\n                        <input pattern=\"/(^(?=.{3,35}$)(?=.+[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0])[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]+$)/i\" className=\"form-control\" name=\"nombre\" type=\"text\" onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Raza </label>\r\n                        <input className=\"form-control\" name=\"raza\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Color </label>\r\n                        <input className=\"form-control\" name=\"color\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Especie </label>\r\n                        <input className=\"form-control\" name=\"especie\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Sexo </label>\r\n                        <input className=\"form-control\" name=\"sexo\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button color=\"success\" onClick={ () => this.insertar() }> Guardar <ion-icon name=\"checkmark\"></ion-icon></Button>\r\n                        {\"  \"}\r\n                    <Button color=\"danger\" onClick={ () => this.hideAddModal() }><ion-icon name=\"close\"></ion-icon> Cancelar </Button>\r\n                </ModalFooter>\r\n\r\n            </Modal>  \r\n\r\n\r\n            <Modal isOpen={this.state.modalEdit}>\r\n\r\n                <ModalHeader>\r\n                    <div>\r\n                        <h5>Editar datos para {this.state.form.nombre}</h5>\r\n                    </div>\r\n                </ModalHeader>\r\n\r\n                <ModalBody>\r\n\r\n                <FormGroup>\r\n                        <label>Nombre </label>\r\n                        <input pattern=\"/(^(?=.{3,35}$)(?=.+[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0])[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]+$)/i\" className=\"form-control\" name=\"nombre\" type=\"text\" onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Raza </label>\r\n                        <input className=\"form-control\" name=\"raza\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Color </label>\r\n                        <input className=\"form-control\" name=\"color\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Especie </label>\r\n                        <input className=\"form-control\" name=\"especie\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <label>Sexo </label>\r\n                        <input className=\"form-control\" name=\"sexo\" type=\"text\"onChange={this.handleChange} />\r\n                    </FormGroup>\r\n\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button color=\"success\" onClick={ () => this.guardar(this.state.form) }> Confirmar <ion-icon name=\"checkmark\"></ion-icon></Button>\r\n                        {\"  \"}\r\n                    <Button color=\"danger\" onClick={ () => this.hideEditModal() }><ion-icon name=\"close\"></ion-icon> Cancelar </Button>\r\n                </ModalFooter>\r\n\r\n            </Modal>  \r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Mycomponent","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\n  const datos = [\r\n    {id: 1, nombre: \"Soy\", raza: \"un\", especie: \"Dato\", sexo: \"de\", color:\"Prueba\", fecha: \"de Mascota\"}\r\n\r\n  ];\r\n\r\nconst PetForm = () => {\r\n \r\n\r\n\r\n  const { register, handleSubmit, errors, getValues  } = useForm();\r\n  const onSubmit = data => {\r\n\r\n    var idNueva = datos;\r\n    idNueva.id = datos.length+1;\r\n\r\n    alert(JSON.stringify(data));\r\n\r\n    console.log(idNueva, data.nombre, data.raza, data.especie, data.sexo, data.color, data.fecha);\r\n    \r\n    datos.push({id: idNueva, nombre: getValues(\"nombre\"), raza: getValues(\"raza\"), especie: getValues(\"especie\"), sexo: getValues(\"sexo\"), color: getValues(\"color\"), fecha: getValues(\"fecha\")});\r\n  \r\n  };\r\n  console.log(errors);\r\n  \r\n\r\n\r\n\r\n  return (\r\n      <div className=\"container\" id=\"mascotitas\">\r\n          <h1>VALIDADO - No Terminado</h1>\r\n      <div className=\"form-group\">\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"Nombre - Ej: Fifi\" name=\"nombre\" ref={register({required: true, max: 30, min: 3, maxLength: 35, pattern: /(^(?=.{3,35}$)(?=.+[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0])[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]+$)/i})} />\r\n      <p> {errors.nombre && \"Sólo letras - Ingresa un nombre valido\"}</p> <br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"F. Nac: DD/MM/AAAA\" name=\"fecha\" ref={register({required: true, pattern: /^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/i})} />\r\n      <p> {errors.fecha && \"Formato de Fecha no valido Ejemplo Dia/Mes/Año\"}</p><br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"Sexo\" name=\"sexo\" ref={register({required: true, max: 10, min: 4, maxLength: 10, pattern: /(^(?=.{3,10}$)(?=.+[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0])[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]+$)/i})} />\r\n      <p> {errors.sexo && \"Sólo letras -> Proximamente Radio Buttons o Select\"}</p><br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"Raza - Ej: Salchicha\" name=\"raza\" ref={register({required: true, max: 30, min: 3, maxLength: 35, pattern: /(^(?=.{3,35}$)(?=.+[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0])[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]+$)/i})} />\r\n      <p>{errors.raza && \"Sólo letras - Ingresa una raza que exista\"}</p><br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"Especie - Ej: Perro\" name=\"especie\" ref={register({required: true, max: 30, min: 3, maxLength: 35, pattern: /(^(?=.{3,35}$)(?=.+[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0])[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]+$)/i})} />\r\n      <p>{errors.especie && \"Sólo letras - Ingresa una especie que exista\"}</p><br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"Color de Pelaje - Marrón\" name=\"color\" ref={register({max: 30, min: 3, maxLength: 35, pattern: /(^(?=.{3,35}$)(?=.+[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0])[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]+$)/i})} />\r\n      <p>{errors.color && \"Sólo letras - Ingresa un color así sea inventado\"}</p><br/>\r\n\r\n      <textarea className=\"form-control\" name=\"caracteristicas\" placeholder=\"Caracteristicas - Ej: tamaño, altura, breve descripcion, etc\" ref={register({required: true, min: 5})} />\r\n      <br/>\r\n      <input type=\"submit\" />\r\n    </form>\r\n    </div>\r\n    <Container>\r\n        <br/>\r\n        <br/> <br/>\r\n\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n\r\n                    <th>Nombre</th>\r\n                    <th>Raza</th>\r\n                    <th>Color</th>\r\n                    <th>Especie</th>\r\n                    <th>Sexo</th>\r\n                    <th>Fecha</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                        { datos.map( (datitos) => (\r\n                        <tr>\r\n                            <td>{datitos.nombre}</td>\r\n                            <td>{datitos.raza}</td>\r\n                            <td>{datitos.color}</td>\r\n                            <td>{datitos.especie}</td>\r\n                            <td>{datitos.sexo}</td>\r\n                            <td>{datitos.fecha}</td>\r\n                            <td>\r\n                                <Button color=\"info\" onClick={() => alert(\"Work In Progress!!\")} >Editar <ion-icon name=\"pencil\"></ion-icon></Button>\r\n                                {\"  \"}\r\n                                <Button color=\"danger\" onClick={() => alert(\"Work In Progress!!\")} >Borrar <ion-icon name=\"trash-bin\"></ion-icon> </Button>\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n\r\n        </Table>\r\n\r\n    </Container>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default PetForm","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nexport default function ClientForm() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = data => console.log(data);\r\n  console.log(errors);\r\n  \r\n  return (\r\n    <div className=\"container\" id=\"mascotitas\">\r\n      <h1>NO TERMINADO</h1>\r\n      <div className=\"form-group\">\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"V-1234567\" name=\"cedula\" ref={register({required: true, pattern: /^[vV|eE][-][0-9]{5,9}$/i})} />\r\n      <p> {errors.cedula && \"Formato de CI debe ser V|E-12345...\"}</p> <br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"Nombre\" name=\"nombre\" ref={register({required: true, max: 30, min: 3, maxLength: 35, pattern: /^[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]/i})} />\r\n      <p> {errors.nombre && \"Sólo letras - Ingresa un nombre valido\"}</p> <br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"Apellido\" name=\"apellido\" ref={register({required: true, max: 30, min: 3, maxLength: 35, pattern: /^[a-zA-ZÁáÀàÉéÈèÍíÌìÓóÒòÚúÙùÑñüÜ0 \\s\\W]/i})} />\r\n      <p> {errors.apellido && \"Sólo letras - Ingresa un Apellido\"}</p> <br/>\r\n\r\n      <input className=\"form-control\" type=\"text\" placeholder=\"usuario@dominio.com\" name=\"email\" ref={register({required: true, pattern: /\\S+@\\S+\\.\\S+/i})} />\r\n      <p> {errors.email && \"Por favor ingresa un email valido uuu@ddd.xx\"}</p> <br/>\r\n\r\n      <input className=\"form-control\" type=\"tel\" placeholder=\"Teléfono\" name=\"telefono\" ref={register({required: true, maxLength: 15, pattern: /^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$/i})} />\r\n      <p> {errors.telefono && \"Formato de Telefono invalido: EJ: +01234567890\"}</p> <br/>\r\n      \r\n      <input type=\"submit\" />\r\n    </form>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport Tablita from '../components/TableComponent'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport PetForm from '../components/forms/PetForm'\r\nimport ClientForm from '../components/forms/ClientForm'\r\n\r\nfunction Dashboard(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <p>crud-funcional campos no validados</p><br/>\r\n            <Tablita /> <br/>\r\n            <p>No funciona el redireccionamiento al hacer build por eso todos los componentes a continuacion</p>  <br/>\r\n            <div className=\"progress progress-bar-striped bg-dark\"/>    <br/>\r\n            <p>Formulario validado de mascota (Funciona Insertar)</p> <br/> \r\n            <PetForm/>  <br/>\r\n            <div className=\"progress progress-bar-striped bg-dark\"/>    <br/>\r\n            <p>formulario validado de cliente</p> <br/> \r\n            <ClientForm/>   <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  ButtonToggle,\r\n  Button\r\n} from 'reactstrap';\r\n\r\nconst NavbarComponent = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\" className=\"navbar\">\r\n        \r\n        <NavbarBrand className=\"navbar-brand\" color=\"pink\" href=\"/\"><i class=\"fas fa-heartbeat\"></i> Sisgevet</NavbarBrand>\r\n        \r\n        <NavbarToggler onClick={toggle} />\r\n\r\n        <Collapse isOpen={isOpen} navbar>\r\n\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <UncontrolledDropdown nav inNavbar>\r\n\r\n              <DropdownToggle nav caret>\r\n              <i class=\"fas fa-users\"></i> Clientes\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                  \r\n              <DropdownItem header> \r\n              Clientes \r\n              </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                    <NavLink href=\"/cliente\">Añadir Clientes</NavLink>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                    <NavLink href=\"/cliente\">Consultar Clientes</NavLink>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                    <NavLink href=\"/cliente\">Modificar Clientes</NavLink>\r\n                </DropdownItem>\r\n\r\n              </DropdownMenu>\r\n\r\n            </UncontrolledDropdown>\r\n\r\n            <UncontrolledDropdown nav inNavbar>\r\n\r\n              <DropdownToggle nav caret>\r\n\r\n              <ion-icon name=\"paw\"/> Mascotas\r\n\r\n              </DropdownToggle>\r\n\r\n              <DropdownMenu right>\r\n                  \r\n              <DropdownItem header> \r\n              Mascotas \r\n              </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                    <NavLink href=\"/mascota\">Añadir Mascota</NavLink>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                    <NavLink href=\"/mascota\">Consultar Mascota</NavLink>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                    <NavLink href=\"/mascota\">Modificar Mascota</NavLink>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n\r\n            </UncontrolledDropdown>\r\n\r\n          </Nav>\r\n\r\n          <Nav className=\"ml-auto\" navbar>\r\n        <UncontrolledDropdown nav inNavbar>\r\n\r\n          \r\n            <DropdownToggle nav caret type=\"button\">\r\n            \r\n            <i class=\"fas fa-user-circle\"></i>\r\n\r\n            </DropdownToggle>\r\n     \r\n \r\n              <DropdownMenu right>\r\n\r\n                <DropdownItem>\r\n                    Perfil\r\n                </DropdownItem>\r\n\r\n                <DropdownItem>\r\n                    Configuración\r\n                </DropdownItem>\r\n\r\n                <DropdownItem divider />\r\n\r\n                <DropdownItem>\r\n                  Cerrar Sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n\r\n            </UncontrolledDropdown>\r\n        </Nav>\r\n\r\n        </Collapse>\r\n\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;","import React from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Dashboard from '../pages/Dashboard'\nimport Barra from '../components/NavbarComponent'\nimport PetForm from '../components/forms/PetForm'\nimport ClientForm from '../components/forms/ClientForm'\n\n\n\nfunction Routes() {\n  return (\n    <>\n    <Barra/>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Dashboard} />\n        <Route path=\"/mascota\" component={PetForm}/>\n        <Route path=\"/cliente\" component={ClientForm}/>\n      </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/sisgevet-styles.css';\nimport Routes from './routes/Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}